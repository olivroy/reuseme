% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/case-if-any.R
\name{case_if_any}
\alias{case_if_any}
\title{case-when, but checks for all matches, returns a character}
\usage{
case_if_any(..., .default = "", .sep = ";", .drop_empty = TRUE)
}
\arguments{
\item{...}{<\code{\link[rlang:dyn-dots]{dynamic-dots}}> A sequence of two-sided
formulas. The left hand side (LHS) determines which values match this case.
The right hand side (RHS) provides the replacement value.

The LHS inputs must evaluate to logical vectors.

The RHS inputs will be coerced to their common type.

All inputs will be recycled to their common size. That said, we encourage
all LHS inputs to be the same size. Recycling is mainly useful for RHS
inputs, where you might supply a size 1 input that will be recycled to the
size of the LHS inputs.

\code{NULL} inputs are ignored.}

\item{.default}{The value used when all of the LHS inputs return either
\code{FALSE} or \code{NA}.

\code{.default} must be size 1 or the same size as the common size computed
from \code{...}.

\code{.default} participates in the computation of the common type with the RHS
inputs.

\code{NA} values in the LHS conditions are treated like \code{FALSE}, meaning that
the result at those locations will be assigned the \code{.default} value. To
handle missing values in the conditions differently, you must explicitly
catch them with another condition before they fall through to the
\code{.default}. This typically involves some variation of \code{is.na(x) ~ value}
tailored to your usage of \code{case_when()}.

If \code{NULL}, the default, a missing value will be used.}

\item{.sep, }{the separator between answers. (default is \verb{;}), can't be a substring of any of the text}

\item{.drop_empty}{drop if no match is returned.
(Defaults to \code{TRUE} for legibility), but if \code{FALSE},
can be used more easily with \code{tidyr::separate_wider/longer_delim()}}
}
\value{
A vector with the same size as the common size computed from the
inputs in \code{...} and the same type as the common type of the RHS inputs
in \code{...}.
}
\description{
Each case is evaluated for \strong{all} cases and a character vector match
for each element determines the corresponding value in the output vector.
If no cases match, the \code{.default} is used.
The function allows you to assign multiple values to a character value, which
can be very handy for EDA.
}
\examples{

case_if_any(
  mtcars$vs == 1 ~ "vs = 1",
  mtcars$mpg > 150 ~ "I have mpg > 150"
)
case_if_any(
  mtcars$vs == 1 ~ "Woww",
  mtcars$mpg > 15 ~ "QW",
  mtcars$qsec > 18 ~ "ooh lalal",
  .sep = ";",
  .default = NA
)
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dplyr-plus.R
\name{filter_detect}
\alias{filter_detect}
\title{Filter rows by pattern}
\usage{
filter_detect(.data, pattern, .cols = dplyr::everything(), ignore.case = TRUE)
}
\arguments{
\item{.data}{A data frame, data frame extension (e.g. a tibble), or a
lazy data frame (e.g. from dbplyr or dtplyr). See \emph{Methods}, below, for
more details.}

\item{pattern}{character string containing a \link[base]{regular expression}
    (or character string for \code{fixed = TRUE}) to be matched
    in the given character vector.  Coerced by
    \code{\link[base]{as.character}} to a character string if possible.  If a
    character vector of length 2 or more is supplied, the first element
    is used with a warning.  Missing values are allowed except for
    \code{regexpr}, \code{gregexpr} and \code{regexec}.}

\item{.cols}{<\code{\link[dplyr:dplyr_tidy_select]{tidy-select}}> Columns to transform.
You can't select grouping columns because they are already automatically
handled by the verb (i.e. \code{\link[dplyr:summarise]{summarise()}} or \code{\link[dplyr:mutate]{mutate()}}).}

\item{ignore.case}{if \code{FALSE}, the pattern matching is \emph{case
      sensitive} and if \code{TRUE}, case is ignored during matching.}
}
\value{
A data frame with relocated columns at first
}
\description{
Shortcut for \code{\link[dplyr:filter]{dplyr::filter()}} and \code{\link[stringr:str_detect]{stringr::str_detect()}}
}
\examples{
dplyr::band_members |>
  filter_detect("Beatles")
}

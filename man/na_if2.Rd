% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dplyr-plus.R
\name{na_if2}
\alias{na_if2}
\title{Transform to NA any of the condition}
\usage{
na_if2(x, ..., values, expr)
}
\arguments{
\item{x}{A vector.}

\item{...}{These dots are for future extensions and must be empty.}

\item{values}{A vector of values. If the length of values = 1, it is actually
the preferable to use \code{dplyr::na_if()} for clarity.}

\item{expr}{A logical vector same length as x}
}
\value{
\code{x} with \code{NA} values when required.
}
\description{
This function is similar to \code{dplyr::na_if()}, but it has 2 differences. the
values of \code{y} are never recycled. There are two ways to provide the condition.
As values or as a logical vector.
}
\examples{
vec <- c(0, 1, 1, 2)
vec2 <- c("Here", "not", NA, "Here")
# NA all 2s
# You can actually use dplyr::na_if() in this case
dplyr::na_if(vec, 2)
# NA all 1 and 2
na_if2(vec, c(1, 2))
na_if2(vec, expr = vec2 == "Here")
}
